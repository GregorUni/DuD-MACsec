library("rjson")
library(jsonlite)
library(gdata) 
library(ggplot2)
aes_file <- "final-1576771569-100-macsec-aesgcm-e-1464--iperf.json"
aes_data <- fromJSON(aes_file)
aes <- as.character(toJSON(aes_data))
aesSet <- data.frame(fromJSON(aes))
aes1 <- aesSet[[3]][[2]][[4]]
aes1 <- aes1[!is.na(aes1)] 
aesBytes <- vector(mode="integer", length=1) 
aesBytes[1] <- mean(aes1[1:100])

aeswe_file <- "final-1576771569-100-macsec-aesgcm-we-1464--iperf.json"
aeswe_data <- fromJSON(aeswe_file)
aeswe <- as.character(toJSON(aeswe_data))
aesweSet <- data.frame(fromJSON(aeswe))
aeswe1 <- aesweSet[[3]][[2]][[4]] 
aesweBytes <- vector(mode="integer", length=1)
aesweBytes[1] <- mean(aeswe1[1:100])

chacha_file <- "final-1576847161-100-macsec-chachapoly-e-1500-1464--iperf.json"
chacha_data <- fromJSON(chacha_file)
chacha <- as.character(toJSON(chacha_data))
chachaSet <- data.frame(fromJSON(chacha))
chacha1 <- chachaSet[[3]][[2]][[4]]
chacha1 <- chacha1[!is.na(chacha1)] 
chachaBytes <- vector(mode="integer", length=1)
chachaBytes[1] <- mean(chacha1[1:100])

morus_file <- "final-1576771569-100-macsec-morus640-e-1500-1464--iperf.json"
morus_data <- fromJSON(morus_file)
morus <- as.character(toJSON(morus_data))
morusSet <- data.frame(fromJSON(morus))
morus1 <- morusSet[[3]][[2]][[4]] 
morusBytes <- vector(mode="integer", length=1)
morusBytes[1] <- mean(morus1[1:100])

aegis_file <- "final-1576847161-100-macsec-aegis128l-e-1500-1464--iperf.json"
aegis_data <- fromJSON(aegis_file)
aegis <- as.character(toJSON(aegis_data))
aegisSet <- data.frame(fromJSON(aegis))
aegis1 <- aegisSet[[3]][[2]][[4]] 
aegisBytes <- vector(mode="integer", length=1)
aegisBytes[1] <- mean(aegis1[1:100])

nomacsec_file <- "final-1576771569-100-no-macsec-1464-1000--iperf.json"
nomacsec_data <- fromJSON(nomacsec_file)
nomacsec <- as.character(toJSON(nomacsec_data))
nomacsecSet <- data.frame(fromJSON(nomacsec))
nomacsec1 <- nomacsecSet[[3]][[2]][[4]] 
nomacsec1 <- nomacsec1[!is.na(nomacsec1)] 
nomacsecBytes <- vector(mode="integer", length=1)
nomacsecBytes[1] <- mean(nomacsec1[1:100])

origmacsec_file <- "final-1576771569-100-no-macsec-1464-1000--iperf.json"
origmacsec_data <- fromJSON(origmacsec_file)
origmacsec <- as.character(toJSON(origmacsec_data))
origmacsecSet <- data.frame(fromJSON(origmacsec))
origmacsec1 <- origmacsecSet[[3]][[2]][[4]] 
origmacsecBytes <- vector(mode="integer", length=1)
origmacsecBytes[1] <- mean(origmacsec1[1:100])

nomacsecBytes<-nomacsecBytes/1000000
origmacsecBytes<-origmacsecBytes/1000000
aesBytes<-aesBytes/1000000
aegisBytes<-aegisBytes/1000000
morusBytes<-morusBytes/1000000
chachaBytes<-chachaBytes/1000000

data=data.frame(name=c("Ethernet","AES-GCM-128","Chach20Poly1305","MORUS640","AEGIS128L","Standard MACsec"),value=c(nomacsecBytes[1],aesBytes[1],chachaBytes[1],morusBytes[1],aegisBytes[1],origmacsecBytes[1]))
BandwithPlot<-ggplot(data, aes(x=name, y=value)) + geom_bar(stat = "identity") +coord_cartesian(ylim=c(0,1300))+scale_y_continuous(name = "Bandbreite in Mbytes")

#########################################################################
aeseping <- read.table("final-1576771569-macsec-aesgcm-e-1500-ping.txt",stringsAsFactor = FALSE, header = F, fill = T )
aeseping7<- gsub("time=", "", aeseping[[7]])
aeseping7 <-as.numeric(aeseping7)
aeseping7 <- aeseping7[!is.na(aeseping7)]

b<- aeseping[[1]]
b<-as.numeric(b)
b<-b[!is.na(b)]
b <- b[-50001]
b <- b[-100001]
b <- b[-150001]
b <- b[-200001]
b <- b[-250001]
b <- b[-300001]

aesEFrame <- data.frame(b, aeseping7)
aesEFrame$b <- factor(aesEFrame$b,labels = c(86,214 , 470, 982, 1358,1468))

aesPlot <- ggplot(aesEFrame , aes(x=b, y=aeseping7))+ geom_boxplot() +scale_y_continuous(name = "Latenz in ms",breaks = seq(0.2,2.5,0.2),limits=c(0, 2.5)) +scale_x_discrete(name = "Paketgröße in Bytes") +
ggtitle("Ping Tests von AES-GCM-128 mit Verschlüsselung")

moruseping <- read.table("final-1576771569-macsec-morus640-e-1500-1500-ping.txt",stringsAsFactor = FALSE, header = F, fill = T )
moruseping7<- gsub("time=", "", moruseping[[7]])
moruseping7 <-as.numeric(moruseping7)
moruseping7 <- moruseping7[!is.na(moruseping7)]

g<- moruseping[[1]]
g<-as.numeric(g)
g<-g[!is.na(g)]
g <- g[-50001]
g <- g[-100001]
g <- g[-150001]
g <- g[-200001]
g <- g[-250001]
g <- g[-300001]


morusEFrame <- data.frame(g, moruseping7)
morusEFrame$g <- factor(morusEFrame$g,labels = c(86,214 , 470, 982, 1358,1464))
MorusPlot <- ggplot(morusEFrame , aes(x=g, y=moruseping7))+ geom_boxplot() +scale_y_continuous(name = "Latenz in ms",breaks = seq(0.2,2.5,0.2),limits=c(0, 2.5)) +scale_x_discrete(name = "Paketgröße in Bytes") + ggtitle("Ping Tests von MORUS640 mit Verschlüsselung")

aegiseping <- read.table("final-1576847161-macsec-aegis128l-e-1500-1500-ping.txt",stringsAsFactor = FALSE, header = F, fill = T )
aegiseping7<- gsub("time=", "", aegiseping[[7]])
aegiseping7 <-as.numeric(aegiseping7)
aegiseping7 <- aegiseping7[!is.na(aegiseping7)]

f<- aegiseping[[1]]
f<-as.numeric(f)
f<-f[!is.na(f)]
f <- f[-50001]
f <- f[-100001]
f <- f[-150001]
f <- f[-200001]
f <- f[-250001]
f <- f[-300001]



aegisEFrame <- data.frame(f, aegiseping7)
aegisEFrame$f <- factor(aegisEFrame$f,labels = c(86,214 , 470, 982, 1358,1464))
AegisPlot <- ggplot(aegisEFrame , aes(x=f, y=aegiseping7))+ geom_boxplot() +scale_y_continuous(name = "Latenz in ms",breaks = seq(0.2,2.5,0.2),limits=c(0, 2.5)) +scale_x_discrete(name = "Paketgröße in Bytes") +
ggtitle("Ping Tests von AEGIS128L mit Verschlüsselung")

chachaeping <- read.table("final-1576847161-macsec-chachapoly-e-1500-1500-ping.txt",stringsAsFactor = FALSE, header = F, fill = T )
chachaeping7<- gsub("time=", "", chachaeping[[7]])
chachaeping7 <-as.numeric(chachaeping7)
chachaeping7 <- chachaeping7[!is.na(chachaeping7)]

c<- chachaeping[[1]]
c<-as.numeric(c)
c<-c[!is.na(c)]
c <- c[-50001]
c <- c[-100001]
c <- c[-150001]
c <- c[-200001]
c <- c[-250001]
c <- c[-300001]


chachaEFrame <- data.frame(c, chachaeping7)
chachaEFrame$c <- factor(chachaEFrame$c,labels = c(86,214 , 470, 982, 1358,1464))
ChachaPlot <- ggplot(chachaEFrame , aes(x=c, y=chachaeping7))+ geom_boxplot(coef = 6) +scale_y_continuous(name = "Latenz in ms",breaks = seq(0.2,2.5,0.2),limits=c(0, 2.5)) +scale_x_discrete(name = "Paketgröße in Bytes") +
ggtitle("Ping Tests von ChaCha20-Poly1305 mit Verschlüsselung")

ethernetping <- read.table("final-1576771569-no-macsec-1464-1464-ping.txt",stringsAsFactor = FALSE, header = F, fill = T )
ethernetping7<- gsub("time=", "", ethernetping[[7]])
ethernetping7 <-as.numeric(ethernetping7)
ethernetping7 <- ethernetping7[!is.na(ethernetping7)]

i<- ethernetping[[1]]
i<-as.numeric(i)
i<-i[!is.na(i)]
i <- i[-50001]
i <- i[-100001]
i <- i[-150001]
i <- i[-200001]
i <- i[-250001]
i <- i[-300001]


ethernetFrame <- data.frame(i, ethernetping7)
ethernetFrame$i <- factor(ethernetFrame$i,labels = c(86,214 , 470, 982, 1358,1468))
ethernetPlot <- ggplot(ethernetFrame , aes(x=i, y=ethernetping7))+ geom_boxplot() +scale_y_continuous(name = "Latenz in ms",breaks = seq(0.2,2.5,0.2),limits=c(0, 2.5)) +scale_x_discrete(name = "Paketgröße in Bytes") +
ggtitle("Ping Tests mit Ethernet")
#####################################################################################
library(reshape2)
dat.m <- melt(dat,id.vars='ID', measure.vars=c(86,214 , 470, 982, 1358,1472))
#####################################################################################
library(reshape2)
require(reshape2)

library(scales)
dstat <- read.csv(file="iperf3-1576771569-100-macsec-chachapoly-e-1500-dstat.csv",skip = 5, header=TRUE) 
cpuchacha <- 100 - dstat[3] 
cpuchacha1 <- head(cpuchacha,1019)
cpuchachavalues<-cpuchacha1[[1]]

######################################################################

nomacsec1500_file <- "final-1576771569-100-no-macsec-1500-1000--iperf.json"
nomacsec1500_data <- fromJSON(nomacsec1500_file)
nomacsec1500 <- as.character(toJSON(nomacsec1500_data))
nomacsec1500Set <- data.frame(fromJSON(nomacsec1500))
nomacsec1500 <- nomacsec1500Set[[3]][[2]][[4]]
nomacsec1500 <- nomacsec1500[!is.na(nomacsec1500)] 
nomacsec1500Bytes <- vector(mode="integer", length=1) 
nomacsec1500Bytes[1] <- mean(nomacsec1500[1:100])

origjumbo_file <- "final-1576771569-100-orig-jumbo-1500--iperf.json"
origjumbo_data <- fromJSON(origjumbo_file)
origjumbo <- as.character(toJSON(origjumbo_data))
origjumboSet <- data.frame(fromJSON(origjumbo))
origjumbo <- origjumboSet[[3]][[2]][[4]]
origjumboBytes <- vector(mode="integer", length=1) 
origjumboBytes[1] <- mean(origjumbo[1:100])

origjumbo2928_file <- "final-1576771569-100-orig-jumbo-2928-2928--iperf.json"
origjumbo2928_data <- fromJSON(origjumbo2928_file)
origjumbo2928 <- as.character(toJSON(origjumbo2928_data))
origjumbo2928Set <- data.frame(fromJSON(origjumbo2928))
origjumbo2928 <- origjumbo2928Set[[3]][[2]][[4]]
origjumbo2928Bytes <- vector(mode="integer", length=1) 
origjumbo2928Bytes[1] <- mean(origjumbo2928[1:100])

macsecfrag_file <- "final-1576771569-100-macsec-aesgcm-e-frag-1500--iperf.json"
macsecfrag_data <- fromJSON(macsecfrag_file)
macsecfrag <- as.character(toJSON(macsecfrag_data))
macsecfragSet <- data.frame(fromJSON(macsecfrag))
macsecfrag <- macsecfragSet[[3]][[2]][[4]]
macsecfragBytes <- vector(mode="integer", length=1) 
macsecfragBytes[1] <- mean(macsecfrag[1:100])

macsecjumbo_file <- "final-1576771569-100-macsec-aesgcm-e-jumbo-1500--iperf.json"
macsecjumbo_data <- fromJSON(macsecjumbo_file)
macsecjumbo <- as.character(toJSON(macsecjumbo_data))
macsecjumboSet <- data.frame(fromJSON(macsecjumbo))
macsecjumbo <- macsecjumboSet[[3]][[2]][[4]]
macsecjumboBytes <- vector(mode="integer", length=1) 
macsecjumboBytes[1] <- mean(macsecjumbo[1:100])

fragjumbo_file <- "final-1576771569-100-macsec-aesgcm-e-frag-jumbo-2928--iperf.json"
fragjumbo_data <- fromJSON(fragjumbo_file)
fragjumbo <- as.character(toJSON(fragjumbo_data))
fragjumboSet <- data.frame(fromJSON(fragjumbo))
fragjumbo<- fragjumboSet[[3]][[2]][[4]]
fragjumboBytes <- vector(mode="integer", length=1) 
fragjumboBytes[1] <- mean(fragjumbo[1:100])

nomacsec1500Bytes<-nomacsec1500Bytes/1000000
origjumboBytes<-origjumboBytes/1000000
origjumbo2928Bytes<-origjumbo2928Bytes/1000000
macsecfragBytes<-macsecfragBytes/1000000
macsecjumboBytes<-macsecjumboBytes/1000000
fragjumboBytes<-fragjumboBytes/1000000



fragmentationData=data.frame(name=c("Ethernet","MACsec with Jumbo 1500 9000","MACsec with Jumbo 2928 9000","MACsec Fragmentation 1500 1500","modified MACsec Jumbo 1500 2928","modified MACsec Jumbo 2928 1500 "),value=c(nomacsec1500Bytes[1],origjumboBytes[1],origjumbo2928Bytes[1],macsecfragBytes[1],macsecjumboBytes[1],fragjumboBytes[1]))

fragmentationData1=data.frame(name=c("Ethernet", "MACsec Fragmentation 1500 1500","modified MACsec Jumbo 2928 1500"),value=c(nomacsec1500Bytes[1],macsecfragBytes[1],fragjumboBytes[1]))
fragmentationBandwithPlot1<-ggplot(fragmentationData1, aes(x=name, y=value)) + geom_bar(stat = "identity") +coord_cartesian(ylim=c(0,1200))+scale_y_continuous(name = "Bandbreite in Mbytes")

fragmentationData2=data.frame(name=c("Ethernet","MACsec with Jumbo 1500 9000","MACsec with Jumbo 2928 9000","modified MACsec Jumbo 1500 2928"),value=c(nomacsec1500Bytes[1],origjumboBytes[1],origjumbo2928Bytes[1],macsecjumboBytes[1]))
fragmentationBandwithPlot2<-ggplot(fragmentationData2, aes(x=name, y=value)) + geom_bar(stat = "identity") +coord_cartesian(ylim=c(0,1200))+scale_y_continuous(name = "Bandbreite in Mbytes")

#################################################################################################################

library(reshape2)
pingData<-matrix(nrow = 6,ncol=6)

aesEPing86<- head(aeseping7,50000)
pingData[1,1] <-aesEPingMedian86 <- median(aesEPing86)
aesEPing214 <- tail(head(aeseping7,-200000),-50000)
pingData[2,1] <-aesEPingMedian214 <- median(aesEPing214)
aesEPing470 <- tail(head(aeseping7,-150000),-100000)
pingData[3,1] <-aesEPingMedian470 <- median(aesEPing470)
aesEPing982 <- tail(head(aeseping7,-100000),-150000)
pingData[4,1] <-aesEPingMedian982 <- median(aesEPing982)
aesEPing1358 <- tail(head(aeseping7,-50000),-200000)
pingData[5,1] <-aesEPingMedian1358 <- median(aesEPing1358)
aesEPing1472 <- tail(aeseping7,50000)
pingData[6,1] <-aesEPingMedian1472 <- median(aesEPing1472)

morusEPing86<- head(moruseping7,50000)
pingData[1,2] <-morusEPingMedian86 <- median(morusEPing86)
morusEPing214 <- tail(head(moruseping7,-200000),-50000)
pingData[2,2] <-morusEPingMedian214 <- median(morusEPing214)
morusEPing470 <- tail(head(moruseping7,-150000),-100000)
pingData[3,2] <-morusEPingMedian470 <- median(morusEPing470)
morusEPing982 <- tail(head(moruseping7,-100000),-150000)
pingData[4,2] <-morusEPingMedian982 <- median(morusEPing982)
morusEPing1358 <- tail(head(moruseping7,-50000),-200000)
pingData[5,2] <-morusEPingMedian1358 <- median(morusEPing1358)
morusEPing1472 <- tail(moruseping7,50000)
pingData[6,2] <-morusEPingMedian1472 <- median(morusEPing1472)

aegisEPing86<- head(aegiseping7,50000)
pingData[1,3] <-aegisEPingMedian86 <- median(aegisEPing86)
aegisEPing214 <- tail(head(aegiseping7,-200000),-50000)
pingData[2,3] <-aegisEPingMedian214 <- median(aegisEPing214)
aegisEPing470 <- tail(head(aegiseping7,-150000),-100000)
pingData[3,3] <-aegisEPingMedian470 <- median(aegisEPing470)
aegisEPing982 <- tail(head(aegiseping7,-100000),-150000)
pingData[4,3] <-aegisEPingMedian982 <- median(aegisEPing982)
aegisEPing1358 <- tail(head(aegiseping7,-50000),-200000)
pingData[5,3] <-aegisEPingMedian1358 <- median(aegisEPing1358)
aegisEPing1472 <- tail(aegiseping7,50000)
pingData[6,3] <-aegisEPingMedian1472 <- median(aegisEPing1472)

chachaEPing86<- head(chachaeping7,50000)
pingData[1,4] <-chachaEPingMedian86 <- median(chachaEPing86)
chachaEPing214 <- tail(head(chachaeping7,-200000),-50000)
pingData[2,4] <-chachaEPingMedian214 <- median(chachaEPing214)
chachaEPing470 <- tail(head(chachaeping7,-150000),-100000)
pingData[3,4] <-chachaEPingMedian470 <- median(chachaEPing470)
chachaEPing982 <- tail(head(chachaeping7,-100000),-150000)
pingData[4,4] <-chachaEPingMedian982 <- median(chachaEPing982)
chachaEPing1358 <- tail(head(chachaeping7,-50000),-200000)
pingData[5,4] <-chachaEPingMedian1358 <- median(chachaEPing1358)
chachaEPing1472 <- tail(chachaeping7,50000)
pingData[6,4] <-chachaEPingMedian1472 <- median(chachaEPing1472)

ethernetPing86<- head(ethernetping7,50000)
pingData[1,5] <-ethernetPingMedian86 <- median(ethernetPing86)
ethernetPing214 <- tail(head(ethernetping7,-200000),-50000)
pingData[2,5] <-ethernetPingMedian214 <- median(ethernetPing214)
ethernetPing470 <- tail(head(ethernetping7,-150000),-100000)
pingData[3,5] <-ethernetPingMedian470 <- median(ethernetPing470)
ethernetPing982 <- tail(head(ethernetping7,-100000),-150000)
pingData[4,5] <-ethernetPingMedian982 <- median(ethernetPing982)
ethernetPing1358 <- tail(head(ethernetping7,-50000),-200000)
pingData[5,5] <-ethernetPingMedian1358 <- median(ethernetPing1358)
ethernetPing1472 <- tail(ethernetping7,50000)
pingData[6,5] <-ethernetPingMedian1472 <- median(ethernetPing1472)
pingData[1,6] <- 86
pingData[2,6] <- 214
pingData[3,6] <- 470
pingData[4,6] <- 982
pingData[5,6] <- 1358
pingData[6,6] <- 1468

pingData.df <- as.data.frame(pingData)
pingData.df<-melt(pingData.df,id="V6")
pingPlot <-ggplot(pingData.df , aes(x=V6, y=value,colour=factor(variable,labels=c("AES", "MORUS","AEGIS","Chacha20Poly1305","Ethernet"))))+ geom_line() +geom_point() + scale_y_continuous(name = "Latenz in ms") +
ggtitle("Ping Tests von Verschlüsselungsalgorthmen") +labs(color = "Algorithmen",x = "Paketgröße in Bytes")

###############################################################################################

library(scales)
fragDstat <- read.csv(file="iperf3-1576771569-100-macsec-aesgcm-e-frag-dstat.csv",skip = 5, header=TRUE) 
cpuaesfrag <- 100 - fragDstat[3] 
cpuaesfrag1 <- head(cpuaesfrag,1019)
cpuaesfragvalues<-cpuaesfrag1[[1]]

aesfrag_file <- "final-1576771569-100-macsec-aesgcm-e-frag-1500--iperf.json"
aesfrag_data <- fromJSON(aesfrag_file)
aesfrag <- as.character(toJSON(aesfrag_data))
aesfragSet <- data.frame(fromJSON(aesfrag))
aesfrag1 <- aesfragSet[[3]][[2]][[4]] 

fragDstat1 <- read.csv(file="iperf3-1576771569-100-macsec-aesgcm-e-frag-jumbo-dstat.csv",skip = 5, header=TRUE) 
cpuaesjumbofrag <- 100 - fragDstat1[3] 
cpuaesjumbofrag1 <- head(cpuaesjumbofrag,1019)
cpuaesjumbofragvalues<-cpuaesjumbofrag1[[1]]

aesjumbofrag_file <- "final-1576771569-100-macsec-aesgcm-e-frag-jumbo-2928--iperf.json"
aesjumbofrag_data <- fromJSON(aesjumbofrag_file)
aesjumbofrag <- as.character(toJSON(aesjumbofrag_data))
aesjumbofragSet <- data.frame(fromJSON(aesjumbofrag))
aesjumbofrag1 <- aesjumbofragSet[[3]][[2]][[4]] 

dstat4 <- read.csv(file="iperf3-1576771569-100-no-macsec-1500-dstat.csv",skip = 5, header=TRUE) 
cpuethernet <- 100 - dstat4[3] 
cpuethernet1 <- head(cpuethernet,1019)
cpuethernetvalues<-cpuethernet1[[1]]

ethernet_file <- "final-1576771569-100-no-macsec-1464-1000--iperf.json"
ethernet_data <- fromJSON(ethernet_file)
ethernet <- as.character(toJSON(ethernet_data))
ethernetSet <- data.frame(fromJSON(ethernet))
ethernet1 <- ethernetSet[[3]][[2]][[4]] 

aesfrag2 <- vector(mode="integer", length=100)
for (i in 1:100) {
    aesfrag2[i]<- aesfrag1/mean(cpuaesfragvalues[i:i+10])
}
aesjumbofrag2 <- vector(mode="integer", length=100)
for (i in 1:100) {
    aesjumbofrag2[i]<- aesjumbofrag1/mean(cpuaesjumbofragvalues[i:i+10])
}

cpuethernet2 <- vector(mode="integer", length=100)
for (i in 1:100) {
    cpuethernet2[i]<- ethernet1/mean(cpuethernetvalues[i:i+10])
}
aesfrag2<-aesfrag2/1000000
aesjumbofrag2<-aesjumbofrag2/1000000
cpuethernet2<-cpuethernet2/1000000

cpuethernet2 <- matrix(cpuethernet2,nrow = 100,ncol=2)
cpuethernet2[,2] <- 1
colnames(cpuethernet2) <- c("Bytes", "Id")

aesfrag2 <- matrix(aesfrag2,nrow = 100,ncol=2)
aesfrag2[,2] <- 2
colnames(aesfrag2) <- c("Bytes", "Id")

aesjumbofrag2 <- matrix(aesjumbofrag2,nrow = 100,ncol=2)
aesjumbofrag2[,2] <- 3
colnames(aesjumbofrag2) <- c("Bytes", "Id")

test2<- rbind(cpuethernet2,aesfrag2,aesjumbofrag2)
cpuFragmentationFrame <- data.frame(test2)
cpuFragmentationFrame$Id <- factor(cpuFragmentationFrame$Id,labels = c(1,2,3))
cpuFragmentationPlot <-ggplot(cpuFragmentationFrame , aes(x=Id, y=Bytes))+ geom_boxplot() +scale_x_discrete(labels=c("1" = "Ethernet", "2" = "MACsec with Fragmentation","3" = "MACsec with Fragmentation and Jumbo Frames")) +scale_y_continuous(name = "Mbytes/CPU-Auslastung",breaks = seq(00,500,50),limits=c(0,500),labels = comma)

##########################################################################################
 ## du hast jetzt in chacha1 die durchschnittswerte von bandbreite/cpu auslastung. Nun generiere boxplot daraus und 
#### todo boxplot von aegis, morus, ethernet... in ein diagramm packen.
as.numeric(levels(cpuethernet1[[1]]))[cpuethernet1[[1]]]
host:
mac: eth0 3c:d9:2b:02:94:66

remote: eth0 3c:d9:2b:02:92:0d
no-macsec 1000
enp2s0f0

dstat <- read.csv(file="iperf3-1576855657-100-macsec-chachapoly-e-1500-dstat.csv",skip = 5, header=TRUE) 
cpuchacha <- 100 - dstat[3] 
cpuchacha1 <- head(cpuchacha,1019)
cpuchachavalues<-cpuchacha1[[1]]

chacha_file <- "final-1576847161-100-macsec-chachapoly-e-1500-1464--iperf.json"
chacha_data <- fromJSON(chacha_file)
chacha <- as.character(toJSON(chacha_data))
chachaSet <- data.frame(fromJSON(chacha))
chacha1 <- chachaSet[[3]][[2]][[4]] 
chacha1 <- chacha1[!is.na(chacha1)] 

dstat1 <- read.csv(file="iperf3-1576847161-100-macsec-aegis128l-e-1500-dstat.csv",skip = 5, header=TRUE) 
cpuaegis <- 100 - dstat1[3] 
cpuaegis1 <- head(cpuaegis,1019)
cpuaegisvalues<-cpuaegis1[[1]]

aegis_file <- "final-1576847161-100-macsec-aegis128l-e-1500-1464--iperf.json"
aegis_data <- fromJSON(aegis_file)
aegis <- as.character(toJSON(aegis_data))
aegisSet <- data.frame(fromJSON(aegis))
aegis1 <- aegisSet[[3]][[2]][[4]] 

dstat2 <- read.csv(file="iperf3-1576771569-100-macsec-morus640-e-1500-dstat.csv",skip = 5, header=TRUE) 
cpumorus <- 100 - dstat2[3] 
cpumorus1 <- head(cpumorus,1019)
cpumorusvalues<-cpumorus1[[1]]

morus_file <- "final-1576771569-100-macsec-morus640-e-1500-1464--iperf.json"
morus_data <- fromJSON(morus_file)
morus <- as.character(toJSON(morus_data))
morusSet <- data.frame(fromJSON(morus))
morus1 <- morusSet[[3]][[2]][[4]] 

dstat3 <- read.csv(file="iperf3-1576771569-100-macsec-aesgcm-e-dstat.csv",skip = 5, header=TRUE) 
cpuaes <- 100 - dstat3[3] 
cpuaes1 <- head(cpuaes,1019)
cpuaesvalues<-cpuaes1[[1]]

aes_file <- "final-1576771569-100-macsec-aesgcm-e-1464--iperf.json"
aes_data <- fromJSON(aes_file)
aes <- as.character(toJSON(aes_data))
aesSet <- data.frame(fromJSON(aes))
aes1 <- aesSet[[3]][[2]][[4]] 

dstat4 <- read.csv(file="iperf3-1576771569-100-no-macsec-1500-dstat.csv",skip = 5, header=TRUE) 
cpuethernet <- 100 - dstat4[3] 
cpuethernet1 <- head(cpuethernet,1019)
#cpuethernetvalues<-as.numeric(levels(cpuethernet1[[1]]))[cpuethernet1[[1]]]
cpuethernetvalues<-cpuethernet1[[1]]

ethernet_file <- "final-1576771569-100-no-macsec-1500-1000--iperf.json"
ethernet_data <- fromJSON(ethernet_file)
ethernet <- as.character(toJSON(ethernet_data))
ethernetSet <- data.frame(fromJSON(ethernet))
ethernet1 <- ethernetSet[[3]][[2]][[4]] 

cpuchacha2 <- vector(mode="integer", length=94)
for (i in 1:94) {
    cpuchacha2[i]<- chacha1/(mean(cpuchachavalues[i:i+10]))
}
cpuaegis2 <- vector(mode="integer", length=100)
for (i in 1:100) {
    cpuaegis2[i]<- aegis1/mean(cpuaegisvalues[i:i+10])
}

cpumorus2 <- vector(mode="integer", length=100)
for (i in 1:100) {
    cpumorus2[i]<- morus1/mean(cpumorusvalues[i:i+10])
}

cpuaes2 <- vector(mode="integer", length=100)
for (i in 1:100) {
    cpuaes2[i]<- aes1/mean(cpuaesvalues[i:i+10])
}

cpuethernet2 <- vector(mode="integer", length=100)
for (i in 1:100) {
    cpuethernet2[i]<- ethernet1/mean(cpuethernetvalues[i:i+10])
}
cpuchacha2<-cpuchacha2/1000000
cpuaegis2<-cpuaegis2/1000000
cpumorus2<-cpumorus2/1000000
cpuaes2<-cpuaes2/1000000
cpuethernet2<-cpuethernet2/1000000

cpuethernet2 <- matrix(cpuethernet2,nrow = 100,ncol=2)
cpuethernet2[,2] <- 1
colnames(cpuethernet2) <- c("Bytes", "Id")

cpuaes2 <- matrix(cpuaes2,nrow = 100,ncol=2)
cpuaes2[,2] <- 2
colnames(cpuaes2) <- c("Bytes", "Id")

cpuaegis2 <- matrix(cpuaegis2,nrow = 100,ncol=2)
cpuaegis2[,2] <- 3
colnames(cpuaegis2) <- c("Bytes", "Id")

cpumorus2 <- matrix(cpumorus2,nrow = 100,ncol=2)
cpumorus2[,2] <- 4
colnames(cpumorus2) <- c("Bytes", "Id")

cpuchacha2 <- matrix(cpuchacha2,nrow = 94,ncol=2)
cpuchacha2[,2] <- 5
colnames(cpuchacha2) <- c("Bytes", "Id")
test<- rbind(cpuethernet2,cpuaes2,cpuaegis2,cpumorus2,cpuchacha2)

cpuchachaEFrame <- data.frame(test)
cpuchachaEFrame$Id <- factor(cpuchachaEFrame$Id,labels = c(1,2,3,4,5))
cpuPlot <-ggplot(cpuchachaEFrame , aes(x=Id, y=Bytes))+ geom_boxplot() +scale_x_discrete(labels=c("1" = "Ethernet", "2" = "AES","3" = "AEGIS128L","4" = "MORUS640","5" = "Chacha20Poly1305")) +scale_y_continuous(name = "Mbytes/CPU-Auslastung",breaks = seq(0,1000,100),limits=c(0,1000),labels = comma) +
ggtitle("Iperf3 Tests Mbytes/CPU-Auslastung ")


###################################################################################
nomacsec1500_file <- "final-1576771569-100-no-macsec-1500-1000--iperf.json"
nomacsec1500_data <- fromJSON(nomacsec1500_file)
nomacsec1500 <- as.character(toJSON(nomacsec1500_data))
nomacsec1500Set <- data.frame(fromJSON(nomacsec1500))
nomacsec1500 <- nomacsec1500Set[[3]][[2]][[4]]
nomacsec1500 <- nomacsec1500[!is.na(nomacsec1500)] 
nomacsec1500Bytes <- vector(mode="integer", length=1) 
nomacsec1500Bytes[1] <- mean(nomacsec1500[1:100])

macsecfrag_file1 <- "final-1576771569-100-macsec-aesgcm-e-frag-1500--iperf.json"
macsecfrag_data1 <- fromJSON(macsecfrag_file1)
macsecfrag1 <- as.character(toJSON(macsecfrag_data1))
macsecfragSet1 <- data.frame(fromJSON(macsecfrag1))
macsecfrag1 <- macsecfragSet1[[3]][[2]][[4]]
macsecfragBytes1 <- vector(mode="integer", length=1) 
macsecfragBytes1[1] <- mean(macsecfrag1[1:100])

aegisfrag_file <- "final-1576771569-100-macsec-aegis128l-e-frag-1500--iperf.json"
aegisfrag_data <- fromJSON(aegisfrag_file)
aegisfrag <- as.character(toJSON(aegisfrag_data))
aegisfragSet <- data.frame(fromJSON(aegisfrag))
aegisfrag <- aegisfragSet[[3]][[2]][[4]]
aegisfragBytes <- vector(mode="integer", length=1) 
aegisfragBytes[1] <- mean(aegisfrag[1:100])

fragchachapoly_file <- "final-1576771569-100-macsec-chachapoly-e-frag-1500--iperf.json"
fragchachapoly_data <- fromJSON(fragchachapoly_file)
fragchachapoly <- as.character(toJSON(fragchachapoly_data))
fragchachapolySet <- data.frame(fromJSON(fragchachapoly))
fragchachapoly<- fragchachapolySet[[3]][[2]][[4]]
fragchachapolyBytes <- vector(mode="integer", length=1) 
fragchachapolyBytes[1] <- mean(fragchachapoly[1:100])


fragmorus_file <- "final-1576771569-100-macsec-morus640-e-frag-1500--iperf.json"
fragmorus_data <- fromJSON(fragmorus_file)
fragmorus <- as.character(toJSON(fragmorus_data))
fragmorusSet <- data.frame(fromJSON(fragmorus))
fragmorus<- fragmorusSet[[3]][[2]][[4]]
fragmorus <- fragmorus[!is.na(fragmorus)] 
fragmorusBytes <- vector(mode="integer", length=1) 
fragmorusBytes[1] <- mean(fragmorus[1:100])

nomacsec1500Bytes<-nomacsec1500Bytes/1000000
macsecfragBytes1<-macsecfragBytes1/1000000
aegisfragBytes<-aegisfragBytes/1000000
fragchachapolyBytes<-fragchachapolyBytes/1000000
fragmorusBytes<-fragmorusBytes/1000000


fragmentationData3=data.frame(name=c("Ethernet","MACsec Fragmentation 1500 1500","MACsec Aegis Fragmentation 1500 1500","MACsec ChachaPoly Fragmentation 1500 1500","MACsec Morus Fragmentation 1500 1500"),value=c(nomacsec1500Bytes[1],macsecfragBytes1[1],aegisfragBytes[1],fragchachapolyBytes[1],fragmorusBytes[1]))
fragmentationBandwithPlot3<-ggplot(fragmentationData3, aes(x=name, y=value)) + geom_bar(stat = "identity") +coord_cartesian(ylim=c(0,1200))+scale_y_continuous(name = "Bandbreite in Mbytes")
